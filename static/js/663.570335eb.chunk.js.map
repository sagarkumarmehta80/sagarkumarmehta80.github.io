{"version":3,"file":"static/js/663.570335eb.chunk.js","mappings":"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","sources":["webpack://widgets/./src/component/Tiles/Tiles.scss?4420","component/Tiles/Tiles.js","webpack://widgets/./src/component/Button/Button.scss?55ea","component/Button/Button.js","webpack://widgets/./src/component/Input/Input.scss?b60b","component/Input/Input.js","webpack://widgets/./src/component/PopUp/PopUp.scss?c259","component/PopUp/PopUp.js","webpack://widgets/./src/pages/Weather/Weather.scss?fa60","constants/util.js","webpack://widgets/./src/pages/Weather/WeatherDataComp/WeatherDataComp.scss?03f2","pages/Weather/WeatherDataComp/WeatherDataComp.js","pages/Weather/Weather.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"tiles_wrap\":\"Tiles__tiles_wrap__SW6Z5\",\"tiles\":\"Tiles__tiles__y2S3R\",\"title\":\"Tiles__title__OQakK\",\"text\":\"Tiles__text__B5NiD\",\"weather_tiles\":\"Tiles__weather_tiles__UcH5v\"};","import { Tooltip } from \"@mui/material\";\r\nimport styles from \"./Tiles.scss\";\r\n\r\nconst Tiles = ({ data, type, customClass }) => {\r\n  let tiles =\r\n    data &&\r\n    data.length > 0 &&\r\n    data.map((tilesData, i) => {\r\n      return (\r\n        <Tooltip\r\n          title={tilesData.cursorTitle ? tilesData.cursorTitle : \"\"}\r\n          followCursor\r\n          placement=\"top\"\r\n          key={i + tilesData.text}\r\n        >\r\n          <div className={styles.tiles} onClick={tilesData.onTilesClick}>\r\n            {tilesData.title && (\r\n              <div className={styles.title}>{tilesData.title}</div>\r\n            )}\r\n            <img src={tilesData.image} alt=\"tiles image\" />\r\n            <div className={styles.text}>{tilesData.text}</div>\r\n          </div>\r\n        </Tooltip>\r\n      );\r\n    });\r\n  return (\r\n    <div\r\n      className={`${styles.tiles_wrap} ${customClass ? customClass : \"\"} ${\r\n        type == \"weatherTiles\" ? styles.weather_tiles : \"\"\r\n      }`}\r\n    >\r\n      {tiles}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tiles;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btn_wrap\":\"Button__btn_wrap__pEAKS\",\"right\":\"Button__right__ZyWOn\",\"left\":\"Button__left__GnqHM\",\"primary\":\"Button__primary__s2Yz4\",\"primary_bg\":\"Button__primary_bg__w9Ale\",\"danger\":\"Button__danger__Ironv\"};","import style from \"./Button.scss\";\r\nexport const buttonType = {\r\n  primary: style.primary,\r\n  primary_bg: style.primary_bg,\r\n  danger: style.danger,\r\n};\r\nexport const iconAlignment = {\r\n  left: style.left,\r\n  right: style.right,\r\n};\r\nconst Button = ({\r\n  customClass,\r\n  onClick,\r\n  btnType = buttonType.primary,\r\n  children,\r\n  iconAlign = iconAlignment.right,\r\n  icon,\r\n}) => {\r\n  return (\r\n    <div\r\n      className={`${style.btn_wrap} ${\r\n        customClass ? customClass : \"\"\r\n      } ${btnType}`}\r\n    >\r\n      <button onClick={onClick} className={iconAlign}>\r\n        {icon && <span>{icon}</span>}\r\n        {<span>{children}</span>}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input_wrap\":\"Input__input_wrap__xUKPr\"};","import style from \"./Input.scss\";\r\n\r\nconst Input = ({\r\n  customClass = \"\",\r\n  type = \"text\",\r\n  onChange,\r\n  maxWidth = \"250px\",\r\n  placeholder,\r\n  onKeyDown,\r\n}) => {\r\n  const handleEnterKeyPress = (e) => {\r\n    if (e.key === \"Enter\" && typeof onKeyDown === \"function\") {\r\n      onKeyDown();\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      className={`${customClass} ${style.input_wrap}`}\r\n      style={{ maxWidth: maxWidth }}\r\n    >\r\n      <input\r\n        type={type}\r\n        onChange={(e) => onChange(e.target.value)}\r\n        placeholder={placeholder}\r\n        onKeyDown={(e) => handleEnterKeyPress(e)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"popup_overlay\":\"PopUp__popup_overlay__xOQIG\",\"popup\":\"PopUp__popup__TmcY1\",\"anim_in\":\"PopUp__anim_in__PSNqF\",\"close\":\"PopUp__close__agWsi\",\"hide_anim\":\"PopUp__hide_anim__LjkLj\",\"footer\":\"PopUp__footer__A79OX\"};","import { useEffect, useRef } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport Button, { buttonType } from \"../Button/Button\";\r\nimport style from \"./PopUp.scss\";\r\nimport { Tooltip } from \"@mui/material\";\r\n// import OutsideClickHook from \"../../hooks/OutsideClickHook\";\r\nconst PopUp = ({\r\n  title,\r\n  children,\r\n  onClose,\r\n  showFooter = false,\r\n  saveBtnText = \"Save\",\r\n}) => {\r\n  const popUpRef = useRef(null);\r\n  // OutsideClickHook(popUpRef, () => onClose());\r\n  useEffect(() => {\r\n    document.getElementById(\"root\").style.filter = \"blur(23px)\";\r\n    document.body.style.overflow = \"hidden\";\r\n    window.addEventListener(\"keydown\", handleKeyListener);\r\n    return () => {\r\n      document.getElementById(\"root\").style.filter = \"blur(0px)\";\r\n      document.body.style.overflow = \"auto\";\r\n      window.removeEventListener(\"keydown\", handleKeyListener);\r\n    };\r\n  }, []);\r\n\r\n  const handleKeyListener = (e) => {\r\n    if (e.keyCode === 27) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const popUpElement = (\r\n    <div className={style.popup_overlay}>\r\n      <div className={style.popup} ref={popUpRef}>\r\n        <div className={style.header}>\r\n          <div className={style.title}>{title}</div>\r\n          <Tooltip title=\"Close (Esc)\" placement=\"left\">\r\n            <div className={style.close} onClick={onClose}>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\">\r\n                <path d=\"M310.6 361.4c12.5 12.5 12.5 32.75 0 45.25C304.4 412.9 296.2 416 288 416s-16.38-3.125-22.62-9.375L160 301.3L54.63 406.6C48.38 412.9 40.19 416 32 416S15.63 412.9 9.375 406.6c-12.5-12.5-12.5-32.75 0-45.25l105.4-105.4L9.375 150.6c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L160 210.8l105.4-105.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-105.4 105.4L310.6 361.4z\" />\r\n              </svg>\r\n            </div>\r\n          </Tooltip>\r\n        </div>\r\n        <div className={style.body}>{children}</div>\r\n        {showFooter && (\r\n          <div className={style.footer}>\r\n            <Button btnType={buttonType.danger} onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button btnType={buttonType.primary_bg}>{saveBtnText}</Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n  return createPortal(popUpElement, document.getElementById(\"popUp\"));\r\n};\r\n\r\nexport default PopUp;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"weather_wrap\":\"Weather__weather_wrap__FUhym\",\"search_wrap\":\"Weather__search_wrap__uxVj5\",\"city_name\":\"Weather__city_name__NAnMT\",\"skeleton_wrap\":\"Weather__skeleton_wrap__Cdt7D\"};","export const getDays = [\r\n  \"sunday\",\r\n  \"monday\",\r\n  \"tuesday\",\r\n  \"wednesday\",\r\n  \"thursday\",\r\n  \"friday\",\r\n  \"saturday\",\r\n];\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"WeatherDataComp__wrapper__CdogO\",\"title_switch_wrap\":\"WeatherDataComp__title_switch_wrap__vSR6t\",\"title\":\"WeatherDataComp__title__yBxxd\",\"switch\":\"WeatherDataComp__switch__WX5At\",\"active\":\"WeatherDataComp__active___HPCC\",\"chart\":\"WeatherDataComp__chart__ppjx2\",\"box_wrap\":\"WeatherDataComp__box_wrap__Y5W8K\",\"blank_elem\":\"WeatherDataComp__blank_elem__mxNBe\"};","import { Chart } from \"primereact/chart\";\r\nimport { useState } from \"react\";\r\nimport styles from \"./WeatherDataComp.scss\";\r\nimport { Tooltip } from \"@mui/material\";\r\nconst WeatherDataComp = (data) => {\r\n  data = data.data;\r\n  const [tempUnit, setTempUnit] = useState(\"c\");\r\n  const hourlyData = () => {\r\n    let hourlyDataArr = [];\r\n    data.hour.forEach((val) => {\r\n      hourlyDataArr.push(val[`temp_${tempUnit}`]);\r\n    });\r\n    return hourlyDataArr;\r\n  };\r\n\r\n  const chartData = {\r\n    labels: [\r\n      \"00:00\",\r\n      \"01:00\",\r\n      \"02:00\",\r\n      \"03:00\",\r\n      \"04:00\",\r\n      \"05:00\",\r\n      \"06:00\",\r\n      \"07:00\",\r\n      \"08:00\",\r\n      \"09:00\",\r\n      \"10:00\",\r\n      \"11:00\",\r\n      \"12:00\",\r\n      \"13:00\",\r\n      \"14:00\",\r\n      \"15:00\",\r\n      \"16:00\",\r\n      \"17:00\",\r\n      \"18:00\",\r\n      \"19:00\",\r\n      \"20:00\",\r\n      \"21:00\",\r\n      \"22:00\",\r\n      \"23:00\",\r\n    ],\r\n    datasets: [\r\n      {\r\n        label: `Temperature(°${tempUnit.toUpperCase()})`,\r\n        data: hourlyData(),\r\n        fill: false,\r\n        borderColor: \"#0a3553\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.title_switch_wrap}>\r\n        <div className={styles.title}>{new Date(data.date).toDateString()}</div>\r\n        <div className={styles.switch}>\r\n          <Tooltip\r\n            title={tempUnit === \"f\" ? \"Change To Celcius\" : \"\"}\r\n            placement=\"left\"\r\n          >\r\n            <div\r\n              className={`${styles.switch_c} ${\r\n                tempUnit === \"c\" ? styles.active : \"\"\r\n              }`}\r\n              onClick={() => setTempUnit(\"c\")}\r\n            >\r\n              °C\r\n            </div>\r\n          </Tooltip>\r\n          <Tooltip\r\n            title={tempUnit === \"c\" ? \"Change To Fahrenheit\" : \"\"}\r\n            placement=\"right\"\r\n          >\r\n            <div\r\n              className={`${styles.switch_f} ${\r\n                tempUnit === \"f\" ? styles.active : \"\"\r\n              }`}\r\n              onClick={() => setTempUnit(\"f\")}\r\n            >\r\n              °F\r\n            </div>\r\n          </Tooltip>\r\n        </div>\r\n      </div>\r\n\r\n      <Chart type=\"line\" data={chartData} className={styles.chart} />\r\n      <div className={styles.box_wrap}>\r\n        <div>Avg. Humidity : {data.day.avghumidity}</div>\r\n        <div>\r\n          Avg. Temp : {data.day[`avgtemp_${tempUnit}`]}\r\n          {`°${tempUnit.toUpperCase()}`}\r\n        </div>\r\n      </div>\r\n      <div className={styles.box_wrap}>\r\n        <div>Sunrise : {data.astro.sunrise}</div>\r\n        <div>Sunset : {data.astro.sunset}</div>\r\n      </div>\r\n      <div className={styles.box_wrap}>\r\n        <div>Moonrise : {data.astro.moonrise}</div>\r\n        <div>Moonset : {data.astro.moonset}</div>\r\n      </div>\r\n      <div className={styles.blank_elem}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherDataComp;\r\n","import { get } from \"lodash\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Button, { buttonType } from \"../../component/Button/Button\";\r\nimport Input from \"../../component/Input/Input\";\r\nimport PopUp from \"../../component/PopUp/PopUp\";\r\nimport Tiles from \"../../component/Tiles/Tiles\";\r\nimport { fetchWeatherData, weatherReportActions } from \"../../store/weather\";\r\nimport style from \"./Weather.scss\";\r\nimport { Skeleton } from \"@mui/material\";\r\nimport { getDays } from \"../../constants/util\";\r\nimport WeatherDataComp from \"./WeatherDataComp/WeatherDataComp\";\r\n\r\nconst Weather = () => {\r\n  const [cityName, setCityName] = useState(\"\");\r\n  const [showPopUp, setShowPopUp] = useState(false);\r\n  const [weatherDetailedData, setWeatherDetailedData] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const weatherState = useSelector((state) => state.weather);\r\n  useEffect(() => {\r\n    if (!weatherState.location) {\r\n      getCurrentLocation();\r\n    }\r\n  }, []);\r\n\r\n  const getCurrentLocation = () => {\r\n    let location = \"new%20delhi\";\r\n    if (navigator && navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (pos) => {\r\n          location = `${pos.coords.latitude}%20${pos.coords.longitude}`;\r\n          dispatch(weatherReportActions.setLocation(location));\r\n          dispatch(fetchWeatherData());\r\n        },\r\n        (err) => {\r\n          dispatch(weatherReportActions.setLocation(location));\r\n          dispatch(fetchWeatherData());\r\n        }\r\n      );\r\n    } else {\r\n      dispatch(weatherReportActions.setLocation(location));\r\n      dispatch(fetchWeatherData());\r\n    }\r\n  };\r\n\r\n  let weatherData = get(weatherState, \"data.forecast.forecastday\", []);\r\n  weatherData = weatherData.map((val) => {\r\n    return {\r\n      cursorTitle: \"Click For Detail\",\r\n      title: getDays[new Date(val.date).getDay()],\r\n      text: `${val.day.maxtemp_c} °C / ${val.day.mintemp_c} °C`,\r\n      image: val.day.condition.icon,\r\n      onTilesClick: () => {\r\n        setShowPopUp(true);\r\n        setWeatherDetailedData(val);\r\n      },\r\n    };\r\n  });\r\n\r\n  const onCityLocationChange = () => {\r\n    if (cityName.trim()) {\r\n      dispatch(weatherReportActions.setLocation(cityName));\r\n      dispatch(fetchWeatherData());\r\n    }\r\n  };\r\n  const skeleton = () => {\r\n    let skeletonComp = [];\r\n    for (let i = 0; i <= 2; i++) {\r\n      skeletonComp.push(\r\n        <Skeleton variant=\"rectangular\" width={166} height={195} key={i} />\r\n      );\r\n    }\r\n    return skeletonComp;\r\n  };\r\n  const btnIcon = (\r\n    <svg\r\n      clipRule=\"evenodd\"\r\n      fillRule=\"evenodd\"\r\n      strokeLinejoin=\"round\"\r\n      strokeMiterlimit=\"2\"\r\n      viewBox=\"0 0 24 24\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"m12.012 1.995c-5.518 0-9.998 4.48-9.998 9.998s4.48 9.998 9.998 9.998 9.997-4.48 9.997-9.998-4.479-9.998-9.997-9.998zm0 1.5c4.69 0 8.497 3.808 8.497 8.498s-3.807 8.498-8.497 8.498-8.498-3.808-8.498-8.498 3.808-8.498 8.498-8.498zm1.528 4.715s1.502 1.505 3.255 3.259c.146.147.219.339.219.531s-.073.383-.219.53c-1.753 1.754-3.254 3.258-3.254 3.258-.145.145-.336.217-.527.217-.191-.001-.383-.074-.53-.221-.293-.293-.295-.766-.004-1.057l1.978-1.977h-6.694c-.414 0-.75-.336-.75-.75s.336-.75.75-.75h6.694l-1.979-1.979c-.289-.289-.286-.762.006-1.054.147-.147.339-.221.531-.222.19 0 .38.071.524.215z\"\r\n        fillRule=\"nonzero\"\r\n      />\r\n    </svg>\r\n  );\r\n  return (\r\n    <div className={style.weather_wrap}>\r\n      <div className={style.search_wrap}>\r\n        <Input\r\n          type=\"text\"\r\n          onChange={(data) => setCityName(data)}\r\n          placeholder=\"Enter Your City\"\r\n          onKeyDown={onCityLocationChange}\r\n        />\r\n        <Button\r\n          btnType={buttonType.primary_bg}\r\n          onClick={onCityLocationChange}\r\n          icon={btnIcon}\r\n        >\r\n          Check Weather\r\n        </Button>\r\n      </div>\r\n      {weatherState.loading ? (\r\n        <Skeleton\r\n          variant=\"text\"\r\n          width={300}\r\n          height={40}\r\n          className={style.city_name}\r\n        />\r\n      ) : (\r\n        weatherState &&\r\n        weatherState.data &&\r\n        weatherState.data.location && (\r\n          <div className={style.city_name}>\r\n            {`${weatherState.data.location.name}, ${weatherState.data.location.region}`}\r\n          </div>\r\n        )\r\n      )}\r\n      {weatherState.loading ? (\r\n        <div className={style.skeleton_wrap}>{skeleton()}</div>\r\n      ) : (\r\n        <Tiles data={weatherData} type=\"weatherTiles\" />\r\n      )}\r\n      {showPopUp && (\r\n        <PopUp onClose={() => setShowPopUp(false)}>\r\n          {weatherDetailedData && (\r\n            <WeatherDataComp data={weatherDetailedData} />\r\n          )}\r\n        </PopUp>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n"],"names":["data","type","customClass","tiles","length","map","tilesData","i","Tooltip","title","cursorTitle","followCursor","placement","className","styles","onClick","onTilesClick","src","image","alt","text","buttonType","primary","style","primary_bg","danger","iconAlignment","left","right","btnType","children","iconAlign","icon","onChange","maxWidth","placeholder","onKeyDown","handleEnterKeyPress","e","key","target","value","onClose","showFooter","saveBtnText","popUpRef","useRef","useEffect","document","getElementById","filter","body","overflow","window","addEventListener","handleKeyListener","removeEventListener","keyCode","popUpElement","ref","xmlns","viewBox","d","createPortal","getDays","useState","tempUnit","setTempUnit","chartData","labels","datasets","label","toUpperCase","hourlyDataArr","hour","forEach","val","push","hourlyData","fill","borderColor","Date","date","toDateString","day","avghumidity","astro","sunrise","sunset","moonrise","moonset","cityName","setCityName","showPopUp","setShowPopUp","weatherDetailedData","setWeatherDetailedData","dispatch","useDispatch","weatherState","useSelector","state","weather","location","getCurrentLocation","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","weatherReportActions","fetchWeatherData","err","weatherData","get","getDay","maxtemp_c","mintemp_c","condition","onCityLocationChange","trim","btnIcon","clipRule","fillRule","strokeLinejoin","strokeMiterlimit","loading","Skeleton","variant","width","height","name","region","skeletonComp","skeleton","Tiles"],"sourceRoot":""}